
Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [33m~[0m update in-place[0m
[31m-[0m/[32m+[0m destroy and then create replacement[0m
[32m+[0m/[31m-[0m create replacement and then destroy[0m
 [36m<=[0m read (data resources)[0m

Terraform will perform the following actions:

[1m  # module.eks.data.tls_certificate.this[0][0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "tls_certificate" "this" {
      [32m+[0m[0m certificates = (known after apply)
      [32m+[0m[0m id           = (known after apply)
      [32m+[0m[0m url          = "https://oidc.eks.us-west-2.amazonaws.com/id/492AE2DC69F87A8BD4CBDACD8C43A003"
    }

[1m  # module.eks.aws_eks_cluster.this[0][0m will be updated in-place
[0m  [33m~[0m[0m resource "aws_eks_cluster" "this" {
        id                            = "eksworkshop-eksctl"
        name                          = "eksworkshop-eksctl"
        tags                          = {
            "Blueprint"              = "eksworkshop-eksctl"
            "GithubRepo"             = "github.com/aws-ia/terraform-aws-eks-blueprints"
            "karpenter.sh/discovery" = "eksworkshop-eksctl"
            "terraform-aws-modules"  = "eks"
        }
      [33m~[0m[0m version                       = "1.25" [33m->[0m[0m "1.26"
        [90m# (11 unchanged attributes hidden)[0m[0m

        [90m# (6 unchanged blocks hidden)[0m[0m
    }

[1m  # module.eks.aws_iam_openid_connect_provider.oidc_provider[0][0m will be updated in-place
[0m  [33m~[0m[0m resource "aws_iam_openid_connect_provider" "oidc_provider" {
        id              = "arn:aws:iam::773588311077:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/492AE2DC69F87A8BD4CBDACD8C43A003"
        tags            = {
            "Blueprint"              = "eksworkshop-eksctl"
            "GithubRepo"             = "github.com/aws-ia/terraform-aws-eks-blueprints"
            "Name"                   = "eksworkshop-eksctl-eks-irsa"
            "karpenter.sh/discovery" = "eksworkshop-eksctl"
        }
      [33m~[0m[0m thumbprint_list = [
          [31m-[0m[0m "9e99a48a9960b14926bb7f3b02e22da2b0ab7280",
        ] -> (known after apply)
        [90m# (4 unchanged attributes hidden)[0m[0m
    }

[1m  # module.eks.time_sleep.this[0][0m must be [1m[31mreplaced[0m
[0m[32m+[0m/[31m-[0m[0m resource "time_sleep" "this" {
      [33m~[0m[0m id              = "2025-03-30T05:47:42Z" -> (known after apply)
      [33m~[0m[0m triggers        = { [31m# forces replacement[0m[0m
          [33m~[0m[0m "cluster_version"                    = "1.25" [33m->[0m[0m "1.26"
            [90m# (4 unchanged elements hidden)[0m[0m
        }
        [90m# (1 unchanged attribute hidden)[0m[0m
    }

[1m  # module.eks_blueprints_addons.data.aws_caller_identity.current[0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "aws_caller_identity" "current" {
      [32m+[0m[0m account_id = (known after apply)
      [32m+[0m[0m arn        = (known after apply)
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m user_id    = (known after apply)
    }

[1m  # module.eks_blueprints_addons.data.aws_eks_addon_version.this["aws-ebs-csi-driver"][0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "aws_eks_addon_version" "this" {
      [32m+[0m[0m addon_name         = "aws-ebs-csi-driver"
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m kubernetes_version = "1.26"
      [32m+[0m[0m most_recent        = true
      [32m+[0m[0m version            = (known after apply)
    }

[1m  # module.eks_blueprints_addons.data.aws_eks_addon_version.this["coredns"][0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "aws_eks_addon_version" "this" {
      [32m+[0m[0m addon_name         = "coredns"
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m kubernetes_version = "1.26"
      [32m+[0m[0m most_recent        = true
      [32m+[0m[0m version            = (known after apply)
    }

[1m  # module.eks_blueprints_addons.data.aws_eks_addon_version.this["kube-proxy"][0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "aws_eks_addon_version" "this" {
      [32m+[0m[0m addon_name         = "kube-proxy"
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m kubernetes_version = "1.26"
      [32m+[0m[0m most_recent        = true
      [32m+[0m[0m version            = (known after apply)
    }

[1m  # module.eks_blueprints_addons.data.aws_eks_addon_version.this["vpc-cni"][0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "aws_eks_addon_version" "this" {
      [32m+[0m[0m addon_name         = "vpc-cni"
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m kubernetes_version = "1.26"
      [32m+[0m[0m most_recent        = true
      [32m+[0m[0m version            = (known after apply)
    }

[1m  # module.eks_blueprints_addons.data.aws_iam_policy_document.aws_efs_csi_driver[0][0m will be read during apply
  # (config refers to values not yet known)
[0m [36m<=[0m[0m data "aws_iam_policy_document" "aws_efs_csi_driver" {
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m json                      = (known after apply)
      [32m+[0m[0m minified_json             = (known after apply)
      [32m+[0m[0m override_policy_documents = []
      [32m+[0m[0m source_policy_documents   = []

      [32m+[0m[0m statement {
          [32m+[0m[0m actions   = [
              [32m+[0m[0m "ec2:DescribeAvailabilityZones",
            ]
          [32m+[0m[0m resources = [
              [32m+[0m[0m "*",
            ]
          [32m+[0m[0m sid       = "AllowDescribeAvailabilityZones"
        }
      [32m+[0m[0m statement {
          [32m+[0m[0m actions   = [
              [32m+[0m[0m "elasticfilesystem:DescribeAccessPoints",
              [32m+[0m[0m "elasticfilesystem:DescribeFileSystems",
              [32m+[0m[0m "elasticfilesystem:DescribeMountTargets",
            ]
          [32m+[0m[0m resources = [
              [32m+[0m[0m (known after apply),
              [32m+[0m[0m (known after apply),
            ]
          [32m+[0m[0m sid       = "AllowDescribeFileSystems"
        }
      [32m+[0m[0m statement {
          [32m+[0m[0m actions   = [
              [32m+[0m[0m "elasticfilesystem:CreateAccessPoint",
              [32m+[0m[0m "elasticfilesystem:TagResource",
            ]
          [32m+[0m[0m resources = [
              [32m+[0m[0m (known after apply),
            ]

          [32m+[0m[0m condition {
              [32m+[0m[0m test     = "StringLike"
              [32m+[0m[0m values   = [
                  [32m+[0m[0m "true",
                ]
              [32m+[0m[0m variable = "aws:RequestTag/efs.csi.aws.com/cluster"
            }
        }
      [32m+[0m[0m statement {
          [32m+[0m[0m actions   = [
              [32m+[0m[0m "elasticfilesystem:DeleteAccessPoint",
            ]
          [32m+[0m[0m resources = [
              [32m+[0m[0m (known after apply),
            ]
          [32m+[0m[0m sid       = "AllowDeleteAccessPoint"

          [32m+[0m[0m condition {
              [32m+[0m[0m test     = "StringLike"
              [32m+[0m[0m values   = [
                  [32m+[0m[0m "true",
                ]
              [32m+[0m[0m variable = "aws:ResourceTag/efs.csi.aws.com/cluster"
            }
        }
      [32m+[0m[0m statement {
          [32m+[0m[0m actions   = [
              [32m+[0m[0m "elasticfilesystem:ClientMount",
              [32m+[0m[0m "elasticfilesystem:ClientRootAccess",
              [32m+[0m[0m "elasticfilesystem:ClientWrite",
            ]
          [32m+[0m[0m resources = [
              [32m+[0m[0m (known after apply),
            ]
          [32m+[0m[0m sid       = "ClientReadWrite"

          [32m+[0m[0m condition {
              [32m+[0m[0m test     = "Bool"
              [32m+[0m[0m values   = [
                  [32m+[0m[0m "true",
                ]
              [32m+[0m[0m variable = "elasticfilesystem:AccessedViaMountTarget"
            }
        }
    }

[1m  # module.eks_blueprints_addons.data.aws_iam_policy_document.aws_load_balancer_controller[0][0m will be read during apply
  # (config refers to values not yet known)
[0m [36m<=[0m[0m data "aws_iam_policy_document" "aws_load_balancer_controller" {
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m json                      = (known after apply)
      [32m+[0m[0m minified_json             = (known after apply)
      [32m+[0m[0m override_policy_documents = []
      [32m+[0m[0m source_policy_documents   = []

      [32m+[0m[0m statement {
          [32m+[0m[0m actions   = [
              [32m+[0m[0m "iam:CreateServiceLinkedRole",
            ]
          [32m+[0m[0m resources = [
              [32m+[0m[0m "*",
            ]

          [32m+[0m[0m condition {
              [32m+[0m[0m test     = "StringEquals"
              [32m+[0m[0m values   = [
                  [32m+[0m[0m "elasticloadbalancing.amazonaws.com",
                ]
              [32m+[0m[0m variable = "iam:AWSServiceName"
            }
        }
      [32m+[0m[0m statement {
          [32m+[0m[0m actions   = [
              [32m+[0m[0m "ec2:DescribeAccountAttributes",
              [32m+[0m[0m "ec2:DescribeAddresses",
              [32m+[0m[0m "ec2:DescribeAvailabilityZones",
              [32m+[0m[0m "ec2:DescribeCoipPools",
              [32m+[0m[0m "ec2:DescribeInstances",
              [32m+[0m[0m "ec2:DescribeInternetGateways",
              [32m+[0m[0m "ec2:DescribeIpamPools",
              [32m+[0m[0m "ec2:DescribeNetworkInterfaces",
              [32m+[0m[0m "ec2:DescribeSecurityGroups",
              [32m+[0m[0m "ec2:DescribeSubnets",
              [32m+[0m[0m "ec2:DescribeTags",
              [32m+[0m[0m "ec2:DescribeVpcPeeringConnections",
              [32m+[0m[0m "ec2:DescribeVpcs",
              [32m+[0m[0m "ec2:GetCoipPoolUsage",
              [32m+[0m[0m "ec2:GetSecurityGroupsForVpc",
              [32m+[0m[0m "elasticloadbalancing:DescribeCapacityReservation",
              [32m+[0m[0m "elasticloadbalancing:DescribeListenerAttributes",
              [32m+[0m[0m "elasticloadbalancing:DescribeListenerCertificates",
              [32m+[0m[0m "elasticloadbalancing:DescribeListeners",
              [32m+[0m[0m "elasticloadbalancing:DescribeLoadBalancerAttributes",
              [32m+[0m[0m "elasticloadbalancing:DescribeLoadBalancers",
              [32m+[0m[0m "elasticloadbalancing:DescribeRules",
              [32m+[0m[0m "elasticloadbalancing:DescribeSSLPolicies",
              [32m+[0m[0m "elasticloadbalancing:DescribeTags",
              [32m+[0m[0m "elasticloadbalancing:DescribeTargetGroupAttributes",
              [32m+[0m[0m "elasticloadbalancing:DescribeTargetGroups",
              [32m+[0m[0m "elasticloadbalancing:DescribeTargetHealth",
              [32m+[0m[0m "elasticloadbalancing:DescribeTrustStores",
            ]
          [32m+[0m[0m resources = [
              [32m+[0m[0m "*",
            ]
        }
      [32m+[0m[0m statement {
          [32m+[0m[0m actions   = [
              [32m+[0m[0m "acm:DescribeCertificate",
              [32m+[0m[0m "acm:ListCertificates",
              [32m+[0m[0m "cognito-idp:DescribeUserPoolClient",
              [32m+[0m[0m "iam:GetServerCertificate",
              [32m+[0m[0m "iam:ListServerCertificates",
              [32m+[0m[0m "shield:CreateProtection",
              [32m+[0m[0m "shield:DeleteProtection",
              [32m+[0m[0m "shield:DescribeProtection",
              [32m+[0m[0m "shield:GetSubscriptionState",
              [32m+[0m[0m "waf-regional:AssociateWebACL",
              [32m+[0m[0m "waf-regional:DisassociateWebACL",
              [32m+[0m[0m "waf-regional:GetWebACL",
              [32m+[0m[0m "waf-regional:GetWebACLForResource",
              [32m+[0m[0m "wafv2:AssociateWebACL",
              [32m+[0m[0m "wafv2:DisassociateWebACL",
              [32m+[0m[0m "wafv2:GetWebACL",
              [32m+[0m[0m "wafv2:GetWebACLForResource",
            ]
          [32m+[0m[0m resources = [
              [32m+[0m[0m "*",
            ]
        }
      [32m+[0m[0m statement {
          [32m+[0m[0m actions   = [
              [32m+[0m[0m "ec2:AuthorizeSecurityGroupIngress",
              [32m+[0m[0m "ec2:RevokeSecurityGroupIngress",
            ]
          [32m+[0m[0m resources = [
              [32m+[0m[0m "*",
            ]
        }
      [32m+[0m[0m statement {
          [32m+[0m[0m actions   = [
              [32m+[0m[0m "ec2:CreateSecurityGroup",
            ]
          [32m+[0m[0m resources = [
              [32m+[0m[0m "*",
            ]
        }
      [32m+[0m[0m statement {
          [32m+[0m[0m actions   = [
              [32m+[0m[0m "ec2:CreateTags",
            ]
          [32m+[0m[0m resources = [
              [32m+[0m[0m (known after apply),
            ]

          [32m+[0m[0m condition {
              [32m+[0m[0m test     = "Null"
              [32m+[0m[0m values   = [
                  [32m+[0m[0m "false",
                ]
              [32m+[0m[0m variable = "aws:RequestTag/elbv2.k8s.aws/cluster"
            }
          [32m+[0m[0m condition {
              [32m+[0m[0m test     = "StringEquals"
              [32m+[0m[0m values   = [
                  [32m+[0m[0m "CreateSecurityGroup",
                ]
              [32m+[0m[0m variable = "ec2:CreateAction"
            }
        }
      [32m+[0m[0m statement {
          [32m+[0m[0m actions   = [
              [32m+[0m[0m "ec2:CreateTags",
              [32m+[0m[0m "ec2:DeleteTags",
            ]
          [32m+[0m[0m resources = [
              [32m+[0m[0m (known after apply),
            ]

          [32m+[0m[0m condition {
              [32m+[0m[0m test     = "Null"
              [32m+[0m[0m values   = [
                  [32m+[0m[0m "false",
                ]
              [32m+[0m[0m variable = "aws:ResourceTag/elbv2.k8s.aws/cluster"
            }
          [32m+[0m[0m condition {
              [32m+[0m[0m test     = "Null"
              [32m+[0m[0m values   = [
                  [32m+[0m[0m "true",
                ]
              [32m+[0m[0m variable = "aws:RequestTag/elbv2.k8s.aws/cluster"
            }
        }
      [32m+[0m[0m statement {
          [32m+[0m[0m actions   = [
              [32m+[0m[0m "ec2:AuthorizeSecurityGroupIngress",
              [32m+[0m[0m "ec2:DeleteSecurityGroup",
              [32m+[0m[0m "ec2:RevokeSecurityGroupIngress",
            ]
          [32m+[0m[0m resources = [
              [32m+[0m[0m "*",
            ]

          [32m+[0m[0m condition {
              [32m+[0m[0m test     = "Null"
              [32m+[0m[0m values   = [
                  [32m+[0m[0m "false",
                ]
              [32m+[0m[0m variable = "aws:ResourceTag/elbv2.k8s.aws/cluster"
            }
        }
      [32m+[0m[0m statement {
          [32m+[0m[0m actions   = [
              [32m+[0m[0m "elasticloadbalancing:CreateLoadBalancer",
              [32m+[0m[0m "elasticloadbalancing:CreateTargetGroup",
            ]
          [32m+[0m[0m resources = [
              [32m+[0m[0m "*",
            ]

          [32m+[0m[0m condition {
              [32m+[0m[0m test     = "Null"
              [32m+[0m[0m values   = [
                  [32m+[0m[0m "false",
                ]
              [32m+[0m[0m variable = "aws:RequestTag/elbv2.k8s.aws/cluster"
            }
        }
      [32m+[0m[0m statement {
          [32m+[0m[0m actions   = [
              [32m+[0m[0m "elasticloadbalancing:CreateListener",
              [32m+[0m[0m "elasticloadbalancing:CreateRule",
              [32m+[0m[0m "elasticloadbalancing:DeleteListener",
              [32m+[0m[0m "elasticloadbalancing:DeleteRule",
            ]
          [32m+[0m[0m resources = [
              [32m+[0m[0m "*",
            ]
        }
      [32m+[0m[0m statement {
          [32m+[0m[0m actions   = [
              [32m+[0m[0m "elasticloadbalancing:AddTags",
              [32m+[0m[0m "elasticloadbalancing:RemoveTags",
            ]
          [32m+[0m[0m resources = [
              [32m+[0m[0m (known after apply),
              [32m+[0m[0m (known after apply),
              [32m+[0m[0m (known after apply),
            ]

          [32m+[0m[0m condition {
              [32m+[0m[0m test     = "Null"
              [32m+[0m[0m values   = [
                  [32m+[0m[0m "false",
                ]
              [32m+[0m[0m variable = "aws:ResourceTag/elbv2.k8s.aws/cluster"
            }
          [32m+[0m[0m condition {
              [32m+[0m[0m test     = "Null"
              [32m+[0m[0m values   = [
                  [32m+[0m[0m "true",
                ]
              [32m+[0m[0m variable = "aws:RequestTag/elbv2.k8s.aws/cluster"
            }
        }
      [32m+[0m[0m statement {
          [32m+[0m[0m actions   = [
              [32m+[0m[0m "elasticloadbalancing:AddTags",
              [32m+[0m[0m "elasticloadbalancing:RemoveTags",
            ]
          [32m+[0m[0m resources = [
              [32m+[0m[0m (known after apply),
              [32m+[0m[0m (known after apply),
              [32m+[0m[0m (known after apply),
              [32m+[0m[0m (known after apply),
            ]
        }
      [32m+[0m[0m statement {
          [32m+[0m[0m actions   = [
              [32m+[0m[0m "elasticloadbalancing:DeleteLoadBalancer",
              [32m+[0m[0m "elasticloadbalancing:DeleteTargetGroup",
              [32m+[0m[0m "elasticloadbalancing:ModifyCapacityReservation",
              [32m+[0m[0m "elasticloadbalancing:ModifyIpPools",
              [32m+[0m[0m "elasticloadbalancing:ModifyListenerAttributes",
              [32m+[0m[0m "elasticloadbalancing:ModifyLoadBalancerAttributes",
              [32m+[0m[0m "elasticloadbalancing:ModifyTargetGroup",
              [32m+[0m[0m "elasticloadbalancing:ModifyTargetGroupAttributes",
              [32m+[0m[0m "elasticloadbalancing:SetIpAddressType",
              [32m+[0m[0m "elasticloadbalancing:SetSecurityGroups",
              [32m+[0m[0m "elasticloadbalancing:SetSubnets",
            ]
          [32m+[0m[0m resources = [
              [32m+[0m[0m "*",
            ]

          [32m+[0m[0m condition {
              [32m+[0m[0m test     = "Null"
              [32m+[0m[0m values   = [
                  [32m+[0m[0m "false",
                ]
              [32m+[0m[0m variable = "aws:ResourceTag/elbv2.k8s.aws/cluster"
            }
        }
      [32m+[0m[0m statement {
          [32m+[0m[0m actions   = [
              [32m+[0m[0m "elasticloadbalancing:AddTags",
            ]
          [32m+[0m[0m resources = [
              [32m+[0m[0m (known after apply),
              [32m+[0m[0m (known after apply),
              [32m+[0m[0m (known after apply),
            ]

          [32m+[0m[0m condition {
              [32m+[0m[0m test     = "Null"
              [32m+[0m[0m values   = [
                  [32m+[0m[0m "false",
                ]
              [32m+[0m[0m variable = "aws:RequestTag/elbv2.k8s.aws/cluster"
            }
          [32m+[0m[0m condition {
              [32m+[0m[0m test     = "StringEquals"
              [32m+[0m[0m values   = [
                  [32m+[0m[0m "CreateTargetGroup",
                  [32m+[0m[0m "CreateLoadBalancer",
                ]
              [32m+[0m[0m variable = "elasticloadbalancing:CreateAction"
            }
        }
      [32m+[0m[0m statement {
          [32m+[0m[0m actions   = [
              [32m+[0m[0m "elasticloadbalancing:DeregisterTargets",
              [32m+[0m[0m "elasticloadbalancing:RegisterTargets",
            ]
          [32m+[0m[0m resources = [
              [32m+[0m[0m (known after apply),
            ]
        }
      [32m+[0m[0m statement {
          [32m+[0m[0m actions   = [
              [32m+[0m[0m "elasticloadbalancing:AddListenerCertificates",
              [32m+[0m[0m "elasticloadbalancing:ModifyListener",
              [32m+[0m[0m "elasticloadbalancing:ModifyRule",
              [32m+[0m[0m "elasticloadbalancing:RemoveListenerCertificates",
              [32m+[0m[0m "elasticloadbalancing:SetRulePriorities",
              [32m+[0m[0m "elasticloadbalancing:SetWebAcl",
            ]
          [32m+[0m[0m resources = [
              [32m+[0m[0m "*",
            ]
        }
    }

[1m  # module.eks_blueprints_addons.data.aws_iam_policy_document.karpenter[0][0m will be read during apply
  # (config refers to values not yet known)
[0m [36m<=[0m[0m data "aws_iam_policy_document" "karpenter" {
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m json                      = (known after apply)
      [32m+[0m[0m minified_json             = (known after apply)
      [32m+[0m[0m override_policy_documents = []
      [32m+[0m[0m source_policy_documents   = []

      [32m+[0m[0m statement {
          [32m+[0m[0m actions   = [
              [32m+[0m[0m "ec2:DescribeAvailabilityZones",
              [32m+[0m[0m "ec2:DescribeImages",
              [32m+[0m[0m "ec2:DescribeInstanceTypeOfferings",
              [32m+[0m[0m "ec2:DescribeInstanceTypes",
              [32m+[0m[0m "ec2:DescribeInstances",
              [32m+[0m[0m "ec2:DescribeLaunchTemplates",
              [32m+[0m[0m "ec2:DescribeSecurityGroups",
              [32m+[0m[0m "ec2:DescribeSpotPriceHistory",
              [32m+[0m[0m "ec2:DescribeSubnets",
            ]
          [32m+[0m[0m resources = [
              [32m+[0m[0m "*",
            ]
        }
      [32m+[0m[0m statement {
          [32m+[0m[0m actions   = [
              [32m+[0m[0m "ec2:CreateFleet",
              [32m+[0m[0m "ec2:CreateLaunchTemplate",
              [32m+[0m[0m "ec2:CreateTags",
              [32m+[0m[0m "ec2:DeleteLaunchTemplate",
              [32m+[0m[0m "ec2:RunInstances",
            ]
          [32m+[0m[0m resources = [
              [32m+[0m[0m (known after apply),
              [32m+[0m[0m (known after apply),
            ]
        }
      [32m+[0m[0m statement {
          [32m+[0m[0m actions   = [
              [32m+[0m[0m "iam:PassRole",
            ]
          [32m+[0m[0m resources = [
              [32m+[0m[0m "arn:aws:iam::773588311077:role/karpenter-eksworkshop-eksctl",
            ]
        }
      [32m+[0m[0m statement {
          [32m+[0m[0m actions   = [
              [32m+[0m[0m "pricing:GetProducts",
            ]
          [32m+[0m[0m resources = [
              [32m+[0m[0m "*",
            ]
        }
      [32m+[0m[0m statement {
          [32m+[0m[0m actions   = [
              [32m+[0m[0m "ssm:GetParameter",
            ]
          [32m+[0m[0m resources = [
              [32m+[0m[0m (known after apply),
            ]
        }
      [32m+[0m[0m statement {
          [32m+[0m[0m actions   = [
              [32m+[0m[0m "eks:DescribeCluster",
            ]
          [32m+[0m[0m resources = [
              [32m+[0m[0m (known after apply),
            ]
        }
      [32m+[0m[0m statement {
          [32m+[0m[0m actions   = [
              [32m+[0m[0m "ec2:TerminateInstances",
            ]
          [32m+[0m[0m resources = [
              [32m+[0m[0m (known after apply),
            ]

          [32m+[0m[0m condition {
              [32m+[0m[0m test     = "StringLike"
              [32m+[0m[0m values   = [
                  [32m+[0m[0m "*",
                ]
              [32m+[0m[0m variable = "ec2:ResourceTag/kubernetes.io/cluster/eksworkshop-eksctl"
            }
        }
      [32m+[0m[0m statement {
          [32m+[0m[0m actions   = [
              [32m+[0m[0m "sqs:DeleteMessage",
              [32m+[0m[0m "sqs:GetQueueAttributes",
              [32m+[0m[0m "sqs:GetQueueUrl",
              [32m+[0m[0m "sqs:ReceiveMessage",
            ]
          [32m+[0m[0m resources = [
              [32m+[0m[0m "arn:aws:sqs:us-west-2:773588311077:karpenter-eksworkshop-eksctl",
            ]
        }
      [32m+[0m[0m statement {
          [32m+[0m[0m actions   = [
              [32m+[0m[0m "iam:AddRoleToInstanceProfile",
              [32m+[0m[0m "iam:CreateInstanceProfile",
              [32m+[0m[0m "iam:DeleteInstanceProfile",
              [32m+[0m[0m "iam:GetInstanceProfile",
              [32m+[0m[0m "iam:RemoveRoleFromInstanceProfile",
              [32m+[0m[0m "iam:TagInstanceProfile",
            ]
          [32m+[0m[0m resources = [
              [32m+[0m[0m "*",
            ]
        }
    }

[1m  # module.eks_blueprints_addons.data.aws_iam_policy_document.karpenter_assume_role[0][0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "aws_iam_policy_document" "karpenter_assume_role" {
      [32m+[0m[0m id            = (known after apply)
      [32m+[0m[0m json          = (known after apply)
      [32m+[0m[0m minified_json = (known after apply)

      [32m+[0m[0m statement {
          [32m+[0m[0m actions = [
              [32m+[0m[0m "sts:AssumeRole",
            ]
          [32m+[0m[0m sid     = "KarpenterNodeAssumeRole"

          [32m+[0m[0m principals {
              [32m+[0m[0m identifiers = [
                  [32m+[0m[0m "ec2.amazonaws.com",
                ]
              [32m+[0m[0m type        = "Service"
            }
        }
    }

[1m  # module.eks_blueprints_addons.data.aws_partition.current[0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "aws_partition" "current" {
      [32m+[0m[0m dns_suffix         = (known after apply)
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m partition          = (known after apply)
      [32m+[0m[0m reverse_dns_prefix = (known after apply)
    }

[1m  # module.eks_blueprints_addons.data.aws_region.current[0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "aws_region" "current" {
      [32m+[0m[0m description = (known after apply)
      [32m+[0m[0m endpoint    = (known after apply)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = (known after apply)
    }

[1m  # module.eks_blueprints_addons.aws_eks_addon.this["aws-ebs-csi-driver"][0m will be updated in-place
[0m  [33m~[0m[0m resource "aws_eks_addon" "this" {
      [33m~[0m[0m addon_version               = "v1.41.0-eksbuild.1" -> (known after apply)
        id                          = "eksworkshop-eksctl:aws-ebs-csi-driver"
        tags                        = {
            "Blueprint"  = "eksworkshop-eksctl"
            "GithubRepo" = "github.com/aws-ia/terraform-aws-eks-blueprints"
        }
        [90m# (11 unchanged attributes hidden)[0m[0m

        [90m# (1 unchanged block hidden)[0m[0m
    }

[1m  # module.eks_blueprints_addons.aws_eks_addon.this["vpc-cni"][0m will be updated in-place
[0m  [33m~[0m[0m resource "aws_eks_addon" "this" {
      [33m~[0m[0m addon_version               = "v1.19.3-eksbuild.1" -> (known after apply)
        id                          = "eksworkshop-eksctl:vpc-cni"
        tags                        = {
            "Blueprint"  = "eksworkshop-eksctl"
            "GithubRepo" = "github.com/aws-ia/terraform-aws-eks-blueprints"
        }
        [90m# (11 unchanged attributes hidden)[0m[0m

        [90m# (1 unchanged block hidden)[0m[0m
    }

[1m  # module.eks_blueprints_addons.aws_iam_role.karpenter[0][0m will be updated in-place
[0m  [33m~[0m[0m resource "aws_iam_role" "karpenter" {
      [33m~[0m[0m assume_role_policy    = jsonencode(
            {
              [31m-[0m[0m Statement = [
                  [31m-[0m[0m {
                      [31m-[0m[0m Action    = "sts:AssumeRole"
                      [31m-[0m[0m Effect    = "Allow"
                      [31m-[0m[0m Principal = {
                          [31m-[0m[0m Service = "ec2.amazonaws.com"
                        }
                      [31m-[0m[0m Sid       = "KarpenterNodeAssumeRole"
                    },
                ]
              [31m-[0m[0m Version   = "2012-10-17"
            }
        ) -> (known after apply)
        id                    = "karpenter-eksworkshop-eksctl"
        name                  = "karpenter-eksworkshop-eksctl"
        tags                  = {
            "Blueprint"  = "eksworkshop-eksctl"
            "GithubRepo" = "github.com/aws-ia/terraform-aws-eks-blueprints"
        }
        [90m# (11 unchanged attributes hidden)[0m[0m
    }

[1m  # module.eks_blueprints_addons.aws_iam_role_policy_attachment.karpenter["AmazonEC2ContainerRegistryReadOnly"][0m must be [1m[31mreplaced[0m
[0m[31m-[0m/[32m+[0m[0m resource "aws_iam_role_policy_attachment" "karpenter" {
      [33m~[0m[0m id         = "karpenter-eksworkshop-eksctl-20250401170514116200000002" -> (known after apply)
      [33m~[0m[0m policy_arn = "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly" -> (known after apply) [31m# forces replacement[0m[0m
        [90m# (1 unchanged attribute hidden)[0m[0m
    }

[1m  # module.eks_blueprints_addons.aws_iam_role_policy_attachment.karpenter["AmazonEKSWorkerNodePolicy"][0m must be [1m[31mreplaced[0m
[0m[31m-[0m/[32m+[0m[0m resource "aws_iam_role_policy_attachment" "karpenter" {
      [33m~[0m[0m id         = "karpenter-eksworkshop-eksctl-20250401170514109500000001" -> (known after apply)
      [33m~[0m[0m policy_arn = "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy" -> (known after apply) [31m# forces replacement[0m[0m
        [90m# (1 unchanged attribute hidden)[0m[0m
    }

[1m  # module.eks_blueprints_addons.aws_iam_role_policy_attachment.karpenter["AmazonEKS_CNI_Policy"][0m must be [1m[31mreplaced[0m
[0m[31m-[0m/[32m+[0m[0m resource "aws_iam_role_policy_attachment" "karpenter" {
      [33m~[0m[0m id         = "karpenter-eksworkshop-eksctl-20250401170514124300000003" -> (known after apply)
      [33m~[0m[0m policy_arn = "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy" -> (known after apply) [31m# forces replacement[0m[0m
        [90m# (1 unchanged attribute hidden)[0m[0m
    }

[1m  # module.eks_blueprints_addons.module.aws_efs_csi_driver.data.aws_caller_identity.current[0][0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "aws_caller_identity" "current" {
      [32m+[0m[0m account_id = (known after apply)
      [32m+[0m[0m arn        = (known after apply)
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m user_id    = (known after apply)
    }

[1m  # module.eks_blueprints_addons.module.aws_efs_csi_driver.data.aws_iam_policy_document.assume[0][0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "aws_iam_policy_document" "assume" {
      [32m+[0m[0m id            = (known after apply)
      [32m+[0m[0m json          = (known after apply)
      [32m+[0m[0m minified_json = (known after apply)

      [32m+[0m[0m statement {
          [32m+[0m[0m actions = [
              [32m+[0m[0m "sts:AssumeRoleWithWebIdentity",
            ]
          [32m+[0m[0m effect  = "Allow"

          [32m+[0m[0m condition {
              [32m+[0m[0m test     = "StringEquals"
              [32m+[0m[0m values   = [
                  [32m+[0m[0m "sts.amazonaws.com",
                ]
              [32m+[0m[0m variable = "oidc.eks.us-west-2.amazonaws.com/id/492AE2DC69F87A8BD4CBDACD8C43A003:aud"
            }
          [32m+[0m[0m condition {
              [32m+[0m[0m test     = "StringEquals"
              [32m+[0m[0m values   = [
                  [32m+[0m[0m "system:serviceaccount:kube-system:efs-csi-controller-sa",
                ]
              [32m+[0m[0m variable = "oidc.eks.us-west-2.amazonaws.com/id/492AE2DC69F87A8BD4CBDACD8C43A003:sub"
            }

          [32m+[0m[0m principals {
              [32m+[0m[0m identifiers = [
                  [32m+[0m[0m "arn:aws:iam::773588311077:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/492AE2DC69F87A8BD4CBDACD8C43A003",
                ]
              [32m+[0m[0m type        = "Federated"
            }
        }
      [32m+[0m[0m statement {
          [32m+[0m[0m actions = [
              [32m+[0m[0m "sts:AssumeRoleWithWebIdentity",
            ]
          [32m+[0m[0m effect  = "Allow"

          [32m+[0m[0m condition {
              [32m+[0m[0m test     = "StringEquals"
              [32m+[0m[0m values   = [
                  [32m+[0m[0m "sts.amazonaws.com",
                ]
              [32m+[0m[0m variable = "oidc.eks.us-west-2.amazonaws.com/id/492AE2DC69F87A8BD4CBDACD8C43A003:aud"
            }
          [32m+[0m[0m condition {
              [32m+[0m[0m test     = "StringEquals"
              [32m+[0m[0m values   = [
                  [32m+[0m[0m "system:serviceaccount:kube-system:efs-csi-node-sa",
                ]
              [32m+[0m[0m variable = "oidc.eks.us-west-2.amazonaws.com/id/492AE2DC69F87A8BD4CBDACD8C43A003:sub"
            }

          [32m+[0m[0m principals {
              [32m+[0m[0m identifiers = [
                  [32m+[0m[0m "arn:aws:iam::773588311077:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/492AE2DC69F87A8BD4CBDACD8C43A003",
                ]
              [32m+[0m[0m type        = "Federated"
            }
        }
    }

[1m  # module.eks_blueprints_addons.module.aws_efs_csi_driver.data.aws_iam_policy_document.this[0][0m will be read during apply
  # (config refers to values not yet known)
[0m [36m<=[0m[0m data "aws_iam_policy_document" "this" {
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m json                      = (known after apply)
      [32m+[0m[0m minified_json             = (known after apply)
      [32m+[0m[0m override_policy_documents = []
      [32m+[0m[0m source_policy_documents   = [
          [32m+[0m[0m (known after apply),
        ]
    }

[1m  # module.eks_blueprints_addons.module.aws_efs_csi_driver.data.aws_partition.current[0][0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "aws_partition" "current" {
      [32m+[0m[0m dns_suffix         = (known after apply)
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m partition          = (known after apply)
      [32m+[0m[0m reverse_dns_prefix = (known after apply)
    }

[1m  # module.eks_blueprints_addons.module.aws_efs_csi_driver.aws_iam_policy.this[0][0m will be updated in-place
[0m  [33m~[0m[0m resource "aws_iam_policy" "this" {
        id               = "arn:aws:iam::773588311077:policy/aws-efs-csi-driver-20250330055231224100000034"
        name             = "aws-efs-csi-driver-20250330055231224100000034"
      [33m~[0m[0m policy           = jsonencode(
            {
              [31m-[0m[0m Statement = [
                  [31m-[0m[0m {
                      [31m-[0m[0m Action   = "ec2:DescribeAvailabilityZones"
                      [31m-[0m[0m Effect   = "Allow"
                      [31m-[0m[0m Resource = "*"
                      [31m-[0m[0m Sid      = "AllowDescribeAvailabilityZones"
                    },
                  [31m-[0m[0m {
                      [31m-[0m[0m Action   = [
                          [31m-[0m[0m "elasticfilesystem:DescribeMountTargets",
                          [31m-[0m[0m "elasticfilesystem:DescribeFileSystems",
                          [31m-[0m[0m "elasticfilesystem:DescribeAccessPoints",
                        ]
                      [31m-[0m[0m Effect   = "Allow"
                      [31m-[0m[0m Resource = [
                          [31m-[0m[0m "arn:aws:elasticfilesystem:us-west-2:773588311077:file-system/*",
                          [31m-[0m[0m "arn:aws:elasticfilesystem:us-west-2:773588311077:access-point/*",
                        ]
                      [31m-[0m[0m Sid      = "AllowDescribeFileSystems"
                    },
                  [31m-[0m[0m {
                      [31m-[0m[0m Action    = [
                          [31m-[0m[0m "elasticfilesystem:TagResource",
                          [31m-[0m[0m "elasticfilesystem:CreateAccessPoint",
                        ]
                      [31m-[0m[0m Condition = {
                          [31m-[0m[0m StringLike = {
                              [31m-[0m[0m "aws:RequestTag/efs.csi.aws.com/cluster" = "true"
                            }
                        }
                      [31m-[0m[0m Effect    = "Allow"
                      [31m-[0m[0m Resource  = "arn:aws:elasticfilesystem:us-west-2:773588311077:file-system/*"
                    },
                  [31m-[0m[0m {
                      [31m-[0m[0m Action    = "elasticfilesystem:DeleteAccessPoint"
                      [31m-[0m[0m Condition = {
                          [31m-[0m[0m StringLike = {
                              [31m-[0m[0m "aws:ResourceTag/efs.csi.aws.com/cluster" = "true"
                            }
                        }
                      [31m-[0m[0m Effect    = "Allow"
                      [31m-[0m[0m Resource  = "arn:aws:elasticfilesystem:us-west-2:773588311077:access-point/*"
                      [31m-[0m[0m Sid       = "AllowDeleteAccessPoint"
                    },
                  [31m-[0m[0m {
                      [31m-[0m[0m Action    = [
                          [31m-[0m[0m "elasticfilesystem:ClientWrite",
                          [31m-[0m[0m "elasticfilesystem:ClientRootAccess",
                          [31m-[0m[0m "elasticfilesystem:ClientMount",
                        ]
                      [31m-[0m[0m Condition = {
                          [31m-[0m[0m Bool = {
                              [31m-[0m[0m "elasticfilesystem:AccessedViaMountTarget" = "true"
                            }
                        }
                      [31m-[0m[0m Effect    = "Allow"
                      [31m-[0m[0m Resource  = "arn:aws:elasticfilesystem:us-west-2:773588311077:file-system/*"
                      [31m-[0m[0m Sid       = "ClientReadWrite"
                    },
                ]
              [31m-[0m[0m Version   = "2012-10-17"
            }
        ) -> (known after apply)
        tags             = {
            "Blueprint"  = "eksworkshop-eksctl"
            "GithubRepo" = "github.com/aws-ia/terraform-aws-eks-blueprints"
        }
        [90m# (7 unchanged attributes hidden)[0m[0m
    }

[1m  # module.eks_blueprints_addons.module.aws_efs_csi_driver.aws_iam_role.this[0][0m will be updated in-place
[0m  [33m~[0m[0m resource "aws_iam_role" "this" {
      [33m~[0m[0m assume_role_policy    = jsonencode(
            {
              [31m-[0m[0m Statement = [
                  [31m-[0m[0m {
                      [31m-[0m[0m Action    = "sts:AssumeRoleWithWebIdentity"
                      [31m-[0m[0m Condition = {
                          [31m-[0m[0m StringEquals = {
                              [31m-[0m[0m "oidc.eks.us-west-2.amazonaws.com/id/492AE2DC69F87A8BD4CBDACD8C43A003:aud" = "sts.amazonaws.com"
                              [31m-[0m[0m "oidc.eks.us-west-2.amazonaws.com/id/492AE2DC69F87A8BD4CBDACD8C43A003:sub" = "system:serviceaccount:kube-system:efs-csi-controller-sa"
                            }
                        }
                      [31m-[0m[0m Effect    = "Allow"
                      [31m-[0m[0m Principal = {
                          [31m-[0m[0m Federated = "arn:aws:iam::773588311077:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/492AE2DC69F87A8BD4CBDACD8C43A003"
                        }
                    },
                  [31m-[0m[0m {
                      [31m-[0m[0m Action    = "sts:AssumeRoleWithWebIdentity"
                      [31m-[0m[0m Condition = {
                          [31m-[0m[0m StringEquals = {
                              [31m-[0m[0m "oidc.eks.us-west-2.amazonaws.com/id/492AE2DC69F87A8BD4CBDACD8C43A003:aud" = "sts.amazonaws.com"
                              [31m-[0m[0m "oidc.eks.us-west-2.amazonaws.com/id/492AE2DC69F87A8BD4CBDACD8C43A003:sub" = "system:serviceaccount:kube-system:efs-csi-node-sa"
                            }
                        }
                      [31m-[0m[0m Effect    = "Allow"
                      [31m-[0m[0m Principal = {
                          [31m-[0m[0m Federated = "arn:aws:iam::773588311077:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/492AE2DC69F87A8BD4CBDACD8C43A003"
                        }
                    },
                ]
              [31m-[0m[0m Version   = "2012-10-17"
            }
        ) -> (known after apply)
        id                    = "aws-efs-csi-driver-2025033005530109790000003e"
        name                  = "aws-efs-csi-driver-2025033005530109790000003e"
        tags                  = {
            "Blueprint"  = "eksworkshop-eksctl"
            "GithubRepo" = "github.com/aws-ia/terraform-aws-eks-blueprints"
        }
        [90m# (11 unchanged attributes hidden)[0m[0m
    }

[1m  # module.eks_blueprints_addons.module.aws_load_balancer_controller.data.aws_caller_identity.current[0][0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "aws_caller_identity" "current" {
      [32m+[0m[0m account_id = (known after apply)
      [32m+[0m[0m arn        = (known after apply)
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m user_id    = (known after apply)
    }

[1m  # module.eks_blueprints_addons.module.aws_load_balancer_controller.data.aws_iam_policy_document.assume[0][0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "aws_iam_policy_document" "assume" {
      [32m+[0m[0m id            = (known after apply)
      [32m+[0m[0m json          = (known after apply)
      [32m+[0m[0m minified_json = (known after apply)

      [32m+[0m[0m statement {
          [32m+[0m[0m actions = [
              [32m+[0m[0m "sts:AssumeRoleWithWebIdentity",
            ]
          [32m+[0m[0m effect  = "Allow"

          [32m+[0m[0m condition {
              [32m+[0m[0m test     = "StringEquals"
              [32m+[0m[0m values   = [
                  [32m+[0m[0m "sts.amazonaws.com",
                ]
              [32m+[0m[0m variable = "oidc.eks.us-west-2.amazonaws.com/id/492AE2DC69F87A8BD4CBDACD8C43A003:aud"
            }
          [32m+[0m[0m condition {
              [32m+[0m[0m test     = "StringEquals"
              [32m+[0m[0m values   = [
                  [32m+[0m[0m "system:serviceaccount:kube-system:aws-load-balancer-controller-sa",
                ]
              [32m+[0m[0m variable = "oidc.eks.us-west-2.amazonaws.com/id/492AE2DC69F87A8BD4CBDACD8C43A003:sub"
            }

          [32m+[0m[0m principals {
              [32m+[0m[0m identifiers = [
                  [32m+[0m[0m "arn:aws:iam::773588311077:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/492AE2DC69F87A8BD4CBDACD8C43A003",
                ]
              [32m+[0m[0m type        = "Federated"
            }
        }
    }

[1m  # module.eks_blueprints_addons.module.aws_load_balancer_controller.data.aws_iam_policy_document.this[0][0m will be read during apply
  # (config refers to values not yet known)
[0m [36m<=[0m[0m data "aws_iam_policy_document" "this" {
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m json                      = (known after apply)
      [32m+[0m[0m minified_json             = (known after apply)
      [32m+[0m[0m override_policy_documents = []
      [32m+[0m[0m source_policy_documents   = [
          [32m+[0m[0m (known after apply),
        ]
    }

[1m  # module.eks_blueprints_addons.module.aws_load_balancer_controller.data.aws_partition.current[0][0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "aws_partition" "current" {
      [32m+[0m[0m dns_suffix         = (known after apply)
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m partition          = (known after apply)
      [32m+[0m[0m reverse_dns_prefix = (known after apply)
    }

[1m  # module.eks_blueprints_addons.module.aws_load_balancer_controller.aws_iam_policy.this[0][0m will be updated in-place
[0m  [33m~[0m[0m resource "aws_iam_policy" "this" {
        id               = "arn:aws:iam::773588311077:policy/alb-controller-20250330055231206200000033"
        name             = "alb-controller-20250330055231206200000033"
      [33m~[0m[0m policy           = jsonencode(
            {
              [31m-[0m[0m Statement = [
                  [31m-[0m[0m {
                      [31m-[0m[0m Action    = "iam:CreateServiceLinkedRole"
                      [31m-[0m[0m Condition = {
                          [31m-[0m[0m StringEquals = {
                              [31m-[0m[0m "iam:AWSServiceName" = "elasticloadbalancing.amazonaws.com"
                            }
                        }
                      [31m-[0m[0m Effect    = "Allow"
                      [31m-[0m[0m Resource  = "*"
                    },
                  [31m-[0m[0m {
                      [31m-[0m[0m Action   = [
                          [31m-[0m[0m "elasticloadbalancing:DescribeTrustStores",
                          [31m-[0m[0m "elasticloadbalancing:DescribeTargetHealth",
                          [31m-[0m[0m "elasticloadbalancing:DescribeTargetGroups",
                          [31m-[0m[0m "elasticloadbalancing:DescribeTargetGroupAttributes",
                          [31m-[0m[0m "elasticloadbalancing:DescribeTags",
                          [31m-[0m[0m "elasticloadbalancing:DescribeSSLPolicies",
                          [31m-[0m[0m "elasticloadbalancing:DescribeRules",
                          [31m-[0m[0m "elasticloadbalancing:DescribeLoadBalancers",
                          [31m-[0m[0m "elasticloadbalancing:DescribeLoadBalancerAttributes",
                          [31m-[0m[0m "elasticloadbalancing:DescribeListeners",
                          [31m-[0m[0m "elasticloadbalancing:DescribeListenerCertificates",
                          [31m-[0m[0m "elasticloadbalancing:DescribeListenerAttributes",
                          [31m-[0m[0m "elasticloadbalancing:DescribeCapacityReservation",
                          [31m-[0m[0m "ec2:GetSecurityGroupsForVpc",
                          [31m-[0m[0m "ec2:GetCoipPoolUsage",
                          [31m-[0m[0m "ec2:DescribeVpcs",
                          [31m-[0m[0m "ec2:DescribeVpcPeeringConnections",
                          [31m-[0m[0m "ec2:DescribeTags",
                          [31m-[0m[0m "ec2:DescribeSubnets",
                          [31m-[0m[0m "ec2:DescribeSecurityGroups",
                          [31m-[0m[0m "ec2:DescribeNetworkInterfaces",
                          [31m-[0m[0m "ec2:DescribeIpamPools",
                          [31m-[0m[0m "ec2:DescribeInternetGateways",
                          [31m-[0m[0m "ec2:DescribeInstances",
                          [31m-[0m[0m "ec2:DescribeCoipPools",
                          [31m-[0m[0m "ec2:DescribeAvailabilityZones",
                          [31m-[0m[0m "ec2:DescribeAddresses",
                          [31m-[0m[0m "ec2:DescribeAccountAttributes",
                        ]
                      [31m-[0m[0m Effect   = "Allow"
                      [31m-[0m[0m Resource = "*"
                    },
                  [31m-[0m[0m {
                      [31m-[0m[0m Action   = [
                          [31m-[0m[0m "wafv2:GetWebACLForResource",
                          [31m-[0m[0m "wafv2:GetWebACL",
                          [31m-[0m[0m "wafv2:DisassociateWebACL",
                          [31m-[0m[0m "wafv2:AssociateWebACL",
                          [31m-[0m[0m "waf-regional:GetWebACLForResource",
                          [31m-[0m[0m "waf-regional:GetWebACL",
                          [31m-[0m[0m "waf-regional:DisassociateWebACL",
                          [31m-[0m[0m "waf-regional:AssociateWebACL",
                          [31m-[0m[0m "shield:GetSubscriptionState",
                          [31m-[0m[0m "shield:DescribeProtection",
                          [31m-[0m[0m "shield:DeleteProtection",
                          [31m-[0m[0m "shield:CreateProtection",
                          [31m-[0m[0m "iam:ListServerCertificates",
                          [31m-[0m[0m "iam:GetServerCertificate",
                          [31m-[0m[0m "cognito-idp:DescribeUserPoolClient",
                          [31m-[0m[0m "acm:ListCertificates",
                          [31m-[0m[0m "acm:DescribeCertificate",
                        ]
                      [31m-[0m[0m Effect   = "Allow"
                      [31m-[0m[0m Resource = "*"
                    },
                  [31m-[0m[0m {
                      [31m-[0m[0m Action   = [
                          [31m-[0m[0m "ec2:RevokeSecurityGroupIngress",
                          [31m-[0m[0m "ec2:AuthorizeSecurityGroupIngress",
                        ]
                      [31m-[0m[0m Effect   = "Allow"
                      [31m-[0m[0m Resource = "*"
                    },
                  [31m-[0m[0m {
                      [31m-[0m[0m Action   = "ec2:CreateSecurityGroup"
                      [31m-[0m[0m Effect   = "Allow"
                      [31m-[0m[0m Resource = "*"
                    },
                  [31m-[0m[0m {
                      [31m-[0m[0m Action    = "ec2:CreateTags"
                      [31m-[0m[0m Condition = {
                          [31m-[0m[0m Null         = {
                              [31m-[0m[0m "aws:RequestTag/elbv2.k8s.aws/cluster" = "false"
                            }
                          [31m-[0m[0m StringEquals = {
                              [31m-[0m[0m "ec2:CreateAction" = "CreateSecurityGroup"
                            }
                        }
                      [31m-[0m[0m Effect    = "Allow"
                      [31m-[0m[0m Resource  = "arn:aws:ec2:*:*:security-group/*"
                    },
                  [31m-[0m[0m {
                      [31m-[0m[0m Action    = [
                          [31m-[0m[0m "ec2:DeleteTags",
                          [31m-[0m[0m "ec2:CreateTags",
                        ]
                      [31m-[0m[0m Condition = {
                          [31m-[0m[0m Null = {
                              [31m-[0m[0m "aws:RequestTag/elbv2.k8s.aws/cluster"  = "true"
                              [31m-[0m[0m "aws:ResourceTag/elbv2.k8s.aws/cluster" = "false"
                            }
                        }
                      [31m-[0m[0m Effect    = "Allow"
                      [31m-[0m[0m Resource  = "arn:aws:ec2:*:*:security-group/*"
                    },
                  [31m-[0m[0m {
                      [31m-[0m[0m Action    = [
                          [31m-[0m[0m "ec2:RevokeSecurityGroupIngress",
                          [31m-[0m[0m "ec2:DeleteSecurityGroup",
                          [31m-[0m[0m "ec2:AuthorizeSecurityGroupIngress",
                        ]
                      [31m-[0m[0m Condition = {
                          [31m-[0m[0m Null = {
                              [31m-[0m[0m "aws:ResourceTag/elbv2.k8s.aws/cluster" = "false"
                            }
                        }
                      [31m-[0m[0m Effect    = "Allow"
                      [31m-[0m[0m Resource  = "*"
                    },
                  [31m-[0m[0m {
                      [31m-[0m[0m Action    = [
                          [31m-[0m[0m "elasticloadbalancing:CreateTargetGroup",
                          [31m-[0m[0m "elasticloadbalancing:CreateLoadBalancer",
                        ]
                      [31m-[0m[0m Condition = {
                          [31m-[0m[0m Null = {
                              [31m-[0m[0m "aws:RequestTag/elbv2.k8s.aws/cluster" = "false"
                            }
                        }
                      [31m-[0m[0m Effect    = "Allow"
                      [31m-[0m[0m Resource  = "*"
                    },
                  [31m-[0m[0m {
                      [31m-[0m[0m Action   = [
                          [31m-[0m[0m "elasticloadbalancing:DeleteRule",
                          [31m-[0m[0m "elasticloadbalancing:DeleteListener",
                          [31m-[0m[0m "elasticloadbalancing:CreateRule",
                          [31m-[0m[0m "elasticloadbalancing:CreateListener",
                        ]
                      [31m-[0m[0m Effect   = "Allow"
                      [31m-[0m[0m Resource = "*"
                    },
                  [31m-[0m[0m {
                      [31m-[0m[0m Action    = [
                          [31m-[0m[0m "elasticloadbalancing:RemoveTags",
                          [31m-[0m[0m "elasticloadbalancing:AddTags",
                        ]
                      [31m-[0m[0m Condition = {
                          [31m-[0m[0m Null = {
                              [31m-[0m[0m "aws:RequestTag/elbv2.k8s.aws/cluster"  = "true"
                              [31m-[0m[0m "aws:ResourceTag/elbv2.k8s.aws/cluster" = "false"
                            }
                        }
                      [31m-[0m[0m Effect    = "Allow"
                      [31m-[0m[0m Resource  = [
                          [31m-[0m[0m "arn:aws:elasticloadbalancing:*:*:targetgroup/*/*",
                          [31m-[0m[0m "arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*",
                          [31m-[0m[0m "arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*",
                        ]
                    },
                  [31m-[0m[0m {
                      [31m-[0m[0m Action   = [
                          [31m-[0m[0m "elasticloadbalancing:RemoveTags",
                          [31m-[0m[0m "elasticloadbalancing:AddTags",
                        ]
                      [31m-[0m[0m Effect   = "Allow"
                      [31m-[0m[0m Resource = [
                          [31m-[0m[0m "arn:aws:elasticloadbalancing:*:*:listener/net/*/*/*",
                          [31m-[0m[0m "arn:aws:elasticloadbalancing:*:*:listener/app/*/*/*",
                          [31m-[0m[0m "arn:aws:elasticloadbalancing:*:*:listener-rule/net/*/*/*",
                          [31m-[0m[0m "arn:aws:elasticloadbalancing:*:*:listener-rule/app/*/*/*",
                        ]
                    },
                  [31m-[0m[0m {
                      [31m-[0m[0m Action    = [
                          [31m-[0m[0m "elasticloadbalancing:SetSubnets",
                          [31m-[0m[0m "elasticloadbalancing:SetSecurityGroups",
                          [31m-[0m[0m "elasticloadbalancing:SetIpAddressType",
                          [31m-[0m[0m "elasticloadbalancing:ModifyTargetGroupAttributes",
                          [31m-[0m[0m "elasticloadbalancing:ModifyTargetGroup",
                          [31m-[0m[0m "elasticloadbalancing:ModifyLoadBalancerAttributes",
                          [31m-[0m[0m "elasticloadbalancing:ModifyListenerAttributes",
                          [31m-[0m[0m "elasticloadbalancing:ModifyIpPools",
                          [31m-[0m[0m "elasticloadbalancing:ModifyCapacityReservation",
                          [31m-[0m[0m "elasticloadbalancing:DeleteTargetGroup",
                          [31m-[0m[0m "elasticloadbalancing:DeleteLoadBalancer",
                        ]
                      [31m-[0m[0m Condition = {
                          [31m-[0m[0m Null = {
                              [31m-[0m[0m "aws:ResourceTag/elbv2.k8s.aws/cluster" = "false"
                            }
                        }
                      [31m-[0m[0m Effect    = "Allow"
                      [31m-[0m[0m Resource  = "*"
                    },
                  [31m-[0m[0m {
                      [31m-[0m[0m Action    = "elasticloadbalancing:AddTags"
                      [31m-[0m[0m Condition = {
                          [31m-[0m[0m Null         = {
                              [31m-[0m[0m "aws:RequestTag/elbv2.k8s.aws/cluster" = "false"
                            }
                          [31m-[0m[0m StringEquals = {
                              [31m-[0m[0m "elasticloadbalancing:CreateAction" = [
                                  [31m-[0m[0m "CreateTargetGroup",
                                  [31m-[0m[0m "CreateLoadBalancer",
                                ]
                            }
                        }
                      [31m-[0m[0m Effect    = "Allow"
                      [31m-[0m[0m Resource  = [
                          [31m-[0m[0m "arn:aws:elasticloadbalancing:*:*:targetgroup/*/*",
                          [31m-[0m[0m "arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*",
                          [31m-[0m[0m "arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*",
                        ]
                    },
                  [31m-[0m[0m {
                      [31m-[0m[0m Action   = [
                          [31m-[0m[0m "elasticloadbalancing:RegisterTargets",
                          [31m-[0m[0m "elasticloadbalancing:DeregisterTargets",
                        ]
                      [31m-[0m[0m Effect   = "Allow"
                      [31m-[0m[0m Resource = "arn:aws:elasticloadbalancing:*:*:targetgroup/*/*"
                    },
                  [31m-[0m[0m {
                      [31m-[0m[0m Action   = [
                          [31m-[0m[0m "elasticloadbalancing:SetWebAcl",
                          [31m-[0m[0m "elasticloadbalancing:SetRulePriorities",
                          [31m-[0m[0m "elasticloadbalancing:RemoveListenerCertificates",
                          [31m-[0m[0m "elasticloadbalancing:ModifyRule",
                          [31m-[0m[0m "elasticloadbalancing:ModifyListener",
                          [31m-[0m[0m "elasticloadbalancing:AddListenerCertificates",
                        ]
                      [31m-[0m[0m Effect   = "Allow"
                      [31m-[0m[0m Resource = "*"
                    },
                ]
              [31m-[0m[0m Version   = "2012-10-17"
            }
        ) -> (known after apply)
        tags             = {
            "Blueprint"  = "eksworkshop-eksctl"
            "GithubRepo" = "github.com/aws-ia/terraform-aws-eks-blueprints"
        }
        [90m# (7 unchanged attributes hidden)[0m[0m
    }

[1m  # module.eks_blueprints_addons.module.aws_load_balancer_controller.aws_iam_role.this[0][0m will be updated in-place
[0m  [33m~[0m[0m resource "aws_iam_role" "this" {
      [33m~[0m[0m assume_role_policy    = jsonencode(
            {
              [31m-[0m[0m Statement = [
                  [31m-[0m[0m {
                      [31m-[0m[0m Action    = "sts:AssumeRoleWithWebIdentity"
                      [31m-[0m[0m Condition = {
                          [31m-[0m[0m StringEquals = {
                              [31m-[0m[0m "oidc.eks.us-west-2.amazonaws.com/id/492AE2DC69F87A8BD4CBDACD8C43A003:aud" = "sts.amazonaws.com"
                              [31m-[0m[0m "oidc.eks.us-west-2.amazonaws.com/id/492AE2DC69F87A8BD4CBDACD8C43A003:sub" = "system:serviceaccount:kube-system:aws-load-balancer-controller-sa"
                            }
                        }
                      [31m-[0m[0m Effect    = "Allow"
                      [31m-[0m[0m Principal = {
                          [31m-[0m[0m Federated = "arn:aws:iam::773588311077:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/492AE2DC69F87A8BD4CBDACD8C43A003"
                        }
                    },
                ]
              [31m-[0m[0m Version   = "2012-10-17"
            }
        ) -> (known after apply)
        id                    = "alb-controller-2025033005530108620000003a"
        name                  = "alb-controller-2025033005530108620000003a"
        tags                  = {
            "Blueprint"  = "eksworkshop-eksctl"
            "GithubRepo" = "github.com/aws-ia/terraform-aws-eks-blueprints"
        }
        [90m# (11 unchanged attributes hidden)[0m[0m
    }

[1m  # module.eks_blueprints_addons.module.karpenter.data.aws_caller_identity.current[0][0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "aws_caller_identity" "current" {
      [32m+[0m[0m account_id = (known after apply)
      [32m+[0m[0m arn        = (known after apply)
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m user_id    = (known after apply)
    }

[1m  # module.eks_blueprints_addons.module.karpenter.data.aws_iam_policy_document.assume[0][0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "aws_iam_policy_document" "assume" {
      [32m+[0m[0m id            = (known after apply)
      [32m+[0m[0m json          = (known after apply)
      [32m+[0m[0m minified_json = (known after apply)

      [32m+[0m[0m statement {
          [32m+[0m[0m actions = [
              [32m+[0m[0m "sts:AssumeRoleWithWebIdentity",
            ]
          [32m+[0m[0m effect  = "Allow"

          [32m+[0m[0m condition {
              [32m+[0m[0m test     = "StringEquals"
              [32m+[0m[0m values   = [
                  [32m+[0m[0m "sts.amazonaws.com",
                ]
              [32m+[0m[0m variable = "oidc.eks.us-west-2.amazonaws.com/id/492AE2DC69F87A8BD4CBDACD8C43A003:aud"
            }
          [32m+[0m[0m condition {
              [32m+[0m[0m test     = "StringEquals"
              [32m+[0m[0m values   = [
                  [32m+[0m[0m "system:serviceaccount:karpenter:karpenter",
                ]
              [32m+[0m[0m variable = "oidc.eks.us-west-2.amazonaws.com/id/492AE2DC69F87A8BD4CBDACD8C43A003:sub"
            }

          [32m+[0m[0m principals {
              [32m+[0m[0m identifiers = [
                  [32m+[0m[0m "arn:aws:iam::773588311077:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/492AE2DC69F87A8BD4CBDACD8C43A003",
                ]
              [32m+[0m[0m type        = "Federated"
            }
        }
    }

[1m  # module.eks_blueprints_addons.module.karpenter.data.aws_iam_policy_document.this[0][0m will be read during apply
  # (config refers to values not yet known)
[0m [36m<=[0m[0m data "aws_iam_policy_document" "this" {
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m json                      = (known after apply)
      [32m+[0m[0m minified_json             = (known after apply)
      [32m+[0m[0m override_policy_documents = []
      [32m+[0m[0m source_policy_documents   = [
          [32m+[0m[0m (known after apply),
        ]
    }

[1m  # module.eks_blueprints_addons.module.karpenter.data.aws_partition.current[0][0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "aws_partition" "current" {
      [32m+[0m[0m dns_suffix         = (known after apply)
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m partition          = (known after apply)
      [32m+[0m[0m reverse_dns_prefix = (known after apply)
    }

[1m  # module.eks_blueprints_addons.module.karpenter.aws_iam_policy.this[0][0m will be updated in-place
[0m  [33m~[0m[0m resource "aws_iam_policy" "this" {
        id               = "arn:aws:iam::773588311077:policy/karpenter-20250330055256577400000038"
        name             = "karpenter-20250330055256577400000038"
      [33m~[0m[0m policy           = jsonencode(
            {
              [31m-[0m[0m Statement = [
                  [31m-[0m[0m {
                      [31m-[0m[0m Action   = [
                          [31m-[0m[0m "ec2:DescribeSubnets",
                          [31m-[0m[0m "ec2:DescribeSpotPriceHistory",
                          [31m-[0m[0m "ec2:DescribeSecurityGroups",
                          [31m-[0m[0m "ec2:DescribeLaunchTemplates",
                          [31m-[0m[0m "ec2:DescribeInstances",
                          [31m-[0m[0m "ec2:DescribeInstanceTypes",
                          [31m-[0m[0m "ec2:DescribeInstanceTypeOfferings",
                          [31m-[0m[0m "ec2:DescribeImages",
                          [31m-[0m[0m "ec2:DescribeAvailabilityZones",
                        ]
                      [31m-[0m[0m Effect   = "Allow"
                      [31m-[0m[0m Resource = "*"
                    },
                  [31m-[0m[0m {
                      [31m-[0m[0m Action   = [
                          [31m-[0m[0m "ec2:RunInstances",
                          [31m-[0m[0m "ec2:DeleteLaunchTemplate",
                          [31m-[0m[0m "ec2:CreateTags",
                          [31m-[0m[0m "ec2:CreateLaunchTemplate",
                          [31m-[0m[0m "ec2:CreateFleet",
                        ]
                      [31m-[0m[0m Effect   = "Allow"
                      [31m-[0m[0m Resource = [
                          [31m-[0m[0m "arn:aws:ec2:us-west-2::image/*",
                          [31m-[0m[0m "arn:aws:ec2:us-west-2:773588311077:*",
                        ]
                    },
                  [31m-[0m[0m {
                      [31m-[0m[0m Action   = "iam:PassRole"
                      [31m-[0m[0m Effect   = "Allow"
                      [31m-[0m[0m Resource = "arn:aws:iam::773588311077:role/karpenter-eksworkshop-eksctl"
                    },
                  [31m-[0m[0m {
                      [31m-[0m[0m Action   = "pricing:GetProducts"
                      [31m-[0m[0m Effect   = "Allow"
                      [31m-[0m[0m Resource = "*"
                    },
                  [31m-[0m[0m {
                      [31m-[0m[0m Action   = "ssm:GetParameter"
                      [31m-[0m[0m Effect   = "Allow"
                      [31m-[0m[0m Resource = "arn:aws:ssm:us-west-2::parameter/aws/service/*"
                    },
                  [31m-[0m[0m {
                      [31m-[0m[0m Action   = "eks:DescribeCluster"
                      [31m-[0m[0m Effect   = "Allow"
                      [31m-[0m[0m Resource = "arn:aws:eks:*:773588311077:cluster/eksworkshop-eksctl"
                    },
                  [31m-[0m[0m {
                      [31m-[0m[0m Action    = "ec2:TerminateInstances"
                      [31m-[0m[0m Condition = {
                          [31m-[0m[0m StringLike = {
                              [31m-[0m[0m "ec2:ResourceTag/kubernetes.io/cluster/eksworkshop-eksctl" = "*"
                            }
                        }
                      [31m-[0m[0m Effect    = "Allow"
                      [31m-[0m[0m Resource  = "arn:aws:ec2:us-west-2:773588311077:instance/*"
                    },
                  [31m-[0m[0m {
                      [31m-[0m[0m Action   = [
                          [31m-[0m[0m "sqs:ReceiveMessage",
                          [31m-[0m[0m "sqs:GetQueueUrl",
                          [31m-[0m[0m "sqs:GetQueueAttributes",
                          [31m-[0m[0m "sqs:DeleteMessage",
                        ]
                      [31m-[0m[0m Effect   = "Allow"
                      [31m-[0m[0m Resource = "arn:aws:sqs:us-west-2:773588311077:karpenter-eksworkshop-eksctl"
                    },
                  [31m-[0m[0m {
                      [31m-[0m[0m Action   = [
                          [31m-[0m[0m "iam:TagInstanceProfile",
                          [31m-[0m[0m "iam:RemoveRoleFromInstanceProfile",
                          [31m-[0m[0m "iam:GetInstanceProfile",
                          [31m-[0m[0m "iam:DeleteInstanceProfile",
                          [31m-[0m[0m "iam:CreateInstanceProfile",
                          [31m-[0m[0m "iam:AddRoleToInstanceProfile",
                        ]
                      [31m-[0m[0m Effect   = "Allow"
                      [31m-[0m[0m Resource = "*"
                    },
                ]
              [31m-[0m[0m Version   = "2012-10-17"
            }
        ) -> (known after apply)
        tags             = {
            "Blueprint"  = "eksworkshop-eksctl"
            "GithubRepo" = "github.com/aws-ia/terraform-aws-eks-blueprints"
        }
        [90m# (7 unchanged attributes hidden)[0m[0m
    }

[1m  # module.eks_blueprints_addons.module.karpenter.aws_iam_role.this[0][0m will be updated in-place
[0m  [33m~[0m[0m resource "aws_iam_role" "this" {
      [33m~[0m[0m assume_role_policy    = jsonencode(
            {
              [31m-[0m[0m Statement = [
                  [31m-[0m[0m {
                      [31m-[0m[0m Action    = "sts:AssumeRoleWithWebIdentity"
                      [31m-[0m[0m Condition = {
                          [31m-[0m[0m StringEquals = {
                              [31m-[0m[0m "oidc.eks.us-west-2.amazonaws.com/id/492AE2DC69F87A8BD4CBDACD8C43A003:aud" = "sts.amazonaws.com"
                              [31m-[0m[0m "oidc.eks.us-west-2.amazonaws.com/id/492AE2DC69F87A8BD4CBDACD8C43A003:sub" = "system:serviceaccount:karpenter:karpenter"
                            }
                        }
                      [31m-[0m[0m Effect    = "Allow"
                      [31m-[0m[0m Principal = {
                          [31m-[0m[0m Federated = "arn:aws:iam::773588311077:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/492AE2DC69F87A8BD4CBDACD8C43A003"
                        }
                    },
                ]
              [31m-[0m[0m Version   = "2012-10-17"
            }
        ) -> (known after apply)
        id                    = "karpenter-20250330055301070200000039"
        name                  = "karpenter-20250330055301070200000039"
        tags                  = {
            "Blueprint"  = "eksworkshop-eksctl"
            "GithubRepo" = "github.com/aws-ia/terraform-aws-eks-blueprints"
        }
        [90m# (11 unchanged attributes hidden)[0m[0m
    }

[1m  # module.eks_blueprints_addons.module.karpenter_sqs.data.aws_iam_policy_document.this[0][0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "aws_iam_policy_document" "this" {
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m json                      = (known after apply)
      [32m+[0m[0m minified_json             = (known after apply)
      [32m+[0m[0m override_policy_documents = []
      [32m+[0m[0m source_policy_documents   = []

      [32m+[0m[0m statement {
          [32m+[0m[0m actions   = [
              [32m+[0m[0m "sqs:SendMessage",
            ]
          [32m+[0m[0m resources = [
              [32m+[0m[0m "arn:aws:sqs:us-west-2:773588311077:karpenter-eksworkshop-eksctl",
            ]
          [32m+[0m[0m sid       = "SendEventsToQueue"

          [32m+[0m[0m principals {
              [32m+[0m[0m identifiers = [
                  [32m+[0m[0m "events.amazonaws.com",
                  [32m+[0m[0m "sqs.amazonaws.com",
                ]
              [32m+[0m[0m type        = "Service"
            }
        }
    }

[1m  # module.eks_blueprints_addons.module.karpenter_sqs.aws_sqs_queue_policy.this[0][0m will be updated in-place
[0m  [33m~[0m[0m resource "aws_sqs_queue_policy" "this" {
        id        = "https://sqs.us-west-2.amazonaws.com/773588311077/karpenter-eksworkshop-eksctl"
      [33m~[0m[0m policy    = jsonencode(
            {
              [31m-[0m[0m Statement = [
                  [31m-[0m[0m {
                      [31m-[0m[0m Action    = "sqs:SendMessage"
                      [31m-[0m[0m Effect    = "Allow"
                      [31m-[0m[0m Principal = {
                          [31m-[0m[0m Service = [
                              [31m-[0m[0m "sqs.amazonaws.com",
                              [31m-[0m[0m "events.amazonaws.com",
                            ]
                        }
                      [31m-[0m[0m Resource  = "arn:aws:sqs:us-west-2:773588311077:karpenter-eksworkshop-eksctl"
                      [31m-[0m[0m Sid       = "SendEventsToQueue"
                    },
                ]
              [31m-[0m[0m Version   = "2012-10-17"
            }
        ) -> (known after apply)
        [90m# (1 unchanged attribute hidden)[0m[0m
    }

[1mPlan:[0m 4 to add, 12 to change, 4 to destroy.
[0m