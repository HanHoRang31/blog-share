loadtest:
  # loadtest.name -- 이 부하 테스트에 사용될 리소스 및 설정의 이름
  name: example
  # loadtest.locust_locustfile -- locustfile의 이름
  locust_locustfile: main.py
  # loadtest.locust_locustfile_path -- locustfile의 경로 (끝에 슬래시 제외)
  locust_locustfile_path: "/mnt/locust"
  # loadtest.locust_locustfile_configmap -- locustfile을 포함하는 configmap의 이름 (기본값은 예제 locustfile 사용)
  locust_locustfile_configmap: "example-locustfile"
  # loadtest.locust_lib_configmap -- 라이브러리를 포함하는 configmap의 이름 (기본값은 예제 라이브러리 사용)
  locust_lib_configmap: "example-lib"
  # loadtest.locust_host -- 부하 테스트할 대상 호스트
  locust_host: https://www.google.com
  # loadtest.pip_packages -- 설치할 추가 파이썬 pip 패키지의 목록
  pip_packages: []
  # loadtest.environment -- 마스터와 워커 모두에게 적용될 환경 변수
  environment: {}
    # VAR: VALUE
  # loadtest.environment_secret -- 마스터와 워커 모두에게 적용되며, 시크릿으로 저장된 환경 변수
  environment_secret: {}
    # VAR: VALUE
  # loadtest.environment_external_secret -- 이 차트 외부에서 생성된 시크릿에 저장된 환경 변수. 각 시크릿에는 값 목록이 포함됨
  environment_external_secret: {}
    # SECRET_NAME: VAR
  # loadtest.mount_external_secret -- 이 차트 외부에서 생성된 시크릿에 저장된 추가 마운트. 각 시크릿에는 값 목록이 포함됨
  mount_external_secret: {}
    # mountPath: yourMountLocation
    # files:
      # secret_name: var
  # loadtest.headless -- locust를 headless 설정으로 실행할지 여부
  headless: false
  # loadtest.tags -- locust를 `--tags [TAG [TAG ...]]` 옵션과 함께 실행할지 여부. 일치하는 태그가 있는 작업만 실행됨
  tags: ""
  # loadtest.excludeTags -- locust를 `--exclude-tags [TAG [TAG ...]]` 옵션과 함께 실행할지 여부. 일치하는 태그가 없는 작업만 실행됨
  excludeTags: ""
  # loadtest.locustCmd -- Locust를 실행하는 명령어
  locustCmd: "/opt/venv/bin/locust"

image:
  repository: locustio/locust
  tag: 2.15.1
  pullPolicy: IfNotPresent

service:
  type: ClusterIP
  annotations: {}
  extraLabels: {}

master:
  # master.image -- A custom docker image including tag
  image: ""
  # master.logLevel -- Log level. Can be INFO or DEBUG
  logLevel: INFO
  # master.replicas -- Should be set to either 0 or 1.
  replicas: 1
  # master.resources -- resources for the locust master
  resources: {}
    # limits:
    #   cpu: 2000m
    #   memory: 1024Mi
    # requests:
    #   cpu: 1000m
    #   memory: 1024Mi
  serviceAccountAnnotations: {}
  # master.deploymentAnnotations -- Annotations on the deployment for master
  deploymentAnnotations: {}
  # master.envs_include_default -- Whether to include default environment variables
  envs_include_default: true
  # master.environment -- environment variables for the master
  environment: {}
  # master.args -- Any extra command args for the master
  args: []
  command:
    - sh
    - /config/docker-entrypoint.sh
  strategy:
    type: RollingUpdate
  # master.pdb.enabled -- Whether to create a PodDisruptionBudget for the master pod
  pdb:
    enabled: false
  # master.auth.enabled -- When enabled, UI basic auth will be enforced with the given username and password
  auth:
    enabled: false
    username: ""
    password: ""
  # master.restartPolicy -- master pod's restartPolicy. Can be Always, OnFailure, or Never.
  restartPolicy: Always
  # master.nodeSelector -- Overwrites nodeSelector from global
  nodeSelector: {}
  # master.tolerations -- Overwrites tolerations from global
  tolerations: []
  # master.affinity -- Overwrites affinity from global
  affinity: {}

worker:
  # worker.image -- A custom docker image including tag
  image: ""
  # worker.logLevel -- Log level. Can be INFO or DEBUG
  logLevel: INFO
  replicas: 1
  # worker.pdb.enabled -- Whether to create a PodDisruptionBudget for the worker pods
  pdb:
    enabled: false
  hpa:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 40
  # worker.resources -- resources for the locust worker
  resources: {}
    # limits:
    #   cpu: 500m
    #   memory: 256Mi
    # requests:
    #   cpu: 500m
    #   memory: 256Mi
  serviceAccountAnnotations: {}
  # worker.deploymentAnnotations -- Annotations on the deployment for workers
  deploymentAnnotations: {}
  # worker.envs_include_default -- Whether to include default environment variables
  envs_include_default: true
  # worker.environment -- environment variables for the workers
  environment: {}
  # worker.args -- Any extra command args for the workers
  args: []
  command:
    - sh
    - /config/docker-entrypoint.sh
  strategy:
    type: RollingUpdate
  # worker.restartPolicy -- worker pod's restartPolicy. Can be Always, OnFailure, or Never.
  restartPolicy: Always
  # worker.nodeSelector -- Overwrites nodeSelector from global
  nodeSelector: {}
  # worker.tolerations -- Overwrites tolerations from global
  tolerations: []
  # worker.affinity -- Overwrites affinity from global
  affinity: {}


nameOverride: ""
fullnameOverride: ""
imagePullSecrets: []

# hostAliases -- List of entries added to the /etc/hosts file on the pod to resolve custom hosts
hostAliases: []
  # - ip: "10.0.0.1"
  #   hostnames:
  #   - "example-host.com"

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

ingress:
  enabled: false
  className: ""
  annotations: {}
  #  kubernetes.io/ingress.class: nginx
  #  kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      pathType: ImplementationSpecific
      path: /
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# extraConfigMaps -- Any extra configmaps to mount for the master and worker. Can be used for extra python packages
extraConfigMaps: {}
nodeSelector: {}
tolerations: []
affinity: {}
# extraLabels -- Any extra labels to apply to all resources
extraLabels: {}

